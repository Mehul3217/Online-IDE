{"version":3,"sources":["components/home.component.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","onChangecode","bind","onChangelang","onChangeinput","onSubmit","state","id","code","input","lang","output","disabled","e","this","setState","target","value","preventDefault","proc","axios","then","response","y","toLowerCase","console","log","data","forEach","ele","name","includes","token","date","Date","now","currentDate","list","push","finalobj","String","element","stderr","stdout","compile_output","finallist","split","catch","error","className","required","onChange","rows","cols","type","onClick","handleClick","map","out","i","key","Component","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e2718883.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport axios from 'axios';\n\nexport default class Home extends Component {\n\tconstructor(props) {\n    super(props);\n\n    this.onChangecode = this.onChangecode.bind(this)\n    this.onChangelang = this.onChangelang.bind(this)\n    this.onChangeinput = this.onChangeinput.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n\n    this.state = {\n    \tid: 71,\n      code: '',\n      input: '',\n      lang: 'c++',\n      output: [],\n      disabled: false\n    }\n  }\n\tonChangecode(e) {\n\t\tthis.setState({\n\t\t\tcode: e.target.value\n\t\t})\n\t}\n\n\tonChangeinput(e) {\n\t\tthis.setState({\n\t\t\tinput: e.target.value\n\t\t})\n\t}\n\n\tonChangelang(e) {\n\t\tthis.setState({\n\t\t\tlang: e.target.value\n\t\t})\n\t}\n\n\thandleClick(e) {\n\t\te.preventDefault();\n\n\t\tthis.setState({\n\t\t\tid:71,\n\t\t\tcode: '',\n\t\t\tinput: '',\n\t\t\tlang: 'c++',\n\t\t\toutput: []\n\t\t})\n\t}\n\tonSubmit(e) {\n\t\te.preventDefault();\n\n\t\tconst proc = {\n\t\t\tcode : this.state.code,\n\t\t\tinput : this.state.input,\n\t\t\tlang : this.state.lang\n\t\t}\n\n\t\tthis.setState({\n\t\t\tdisabled: true\n\t\t})\n\n\t\taxios({\n\t\t    \"method\":\"GET\",\n\t\t    \"url\":\"https://judge0.p.rapidapi.com/languages\",\n\t\t    \"headers\":{\n\t\t\t    \"content-type\":\"application/octet-stream\",\n\t\t\t    \"x-rapidapi-host\":\"judge0.p.rapidapi.com\",\n\t\t\t    \"x-rapidapi-key\":\"61a3d56095mshc8da56ba97370cdp1a67bcjsn255358620eb0\",\n\t\t\t    \"useQueryString\":true\n\t\t\t    }\n\t\t    })\n\t \t    .then((response)=>{\n\t \t    \tvar y = proc[\"lang\"].toLowerCase();\n\t \t    \tconsole.log(y)\n\t    \t\tresponse.data.forEach(ele => {\n\t\t\t      \tvar x = ele.name.toLowerCase();\n\t\t\t      \tvar n = x.includes(y);\n\t\t\t      \tif(n===true)\n\t\t\t      \t{\n\t\t\t      \t\tthis.setState({\n\t\t\t      \t\t\tid: ele.id\n\t\t\t      \t\t})\n\t\t\t      \t}\n\t\t      \t})\n\t\t    \taxios({\n\t\t\t\t    \"method\":\"POST\",\n\t\t\t\t    \"url\":\"https://judge0.p.rapidapi.com/submissions\",\n\t\t\t\t    \"headers\":{\n\t\t\t\t\t    \"content-type\":\"application/json\",\n\t\t\t\t\t    \"x-rapidapi-host\":\"judge0.p.rapidapi.com\",\n\t\t\t\t\t    \"x-rapidapi-key\":\"61a3d56095mshc8da56ba97370cdp1a67bcjsn255358620eb0\",\n\t\t\t\t\t    \"accept\":\"application/json\",\n\t\t\t\t\t    \"useQueryString\":true\n\t\t\t\t\t    },\n\t\t\t\t    \"data\":{\n\t\t\t\t    \t\"language_id\":this.state.id,\n\t\t\t\t    \t\"source_code\":proc[\"code\"],\n    \t\t\t\t\t\"stdin\":proc[\"input\"]\n\t\t\t\t    \t}\n\t\t\t\t\t})\n\t\t\t\t\t.then((response)=>{\n\t\t\t    \tconsole.log(response.data.token)\n\t\t\t    \tconst date = Date.now();\n\t                const milliseconds=2000;\n\t                let currentDate = null;\n\t                do {\n\t                    currentDate = Date.now();\n\t                } while (currentDate - date < milliseconds);\n\t\t\t    \taxios({\n\t\t\t\t\t    \"method\":\"GET\",\n\t\t\t\t\t    \"url\":\"https://judge0.p.rapidapi.com/submissions/\" + response.data.token,\n\t\t\t\t\t    \"headers\":{\n\t\t\t\t\t\t    \"content-type\":\"application/octet-stream\",\n\t\t\t\t\t\t    \"x-rapidapi-host\":\"judge0.p.rapidapi.com\",\n\t\t\t\t\t\t    \"x-rapidapi-key\":\"61a3d56095mshc8da56ba97370cdp1a67bcjsn255358620eb0\",\n\t\t\t\t\t\t    \"useQueryString\":true\n\t\t\t\t\t    \t}\n\t\t\t\t\t    })\n\t\t\t\t\t    .then((response)=>{\n\t\t\t\t\t      console.log(response.data)\n\t\t\t\t\t      var list =[]\n\t\t\t\t\t      list.push(response.data)\n\t\t\t\t\t      var finalobj = new String();\n\t\t\t\t\t      list.forEach((element) =>{\n\t\t\t\t\t      \tif(proc[\"lang\"] === \"python\" )\n\t\t\t\t\t      \t{\n\t\t\t\t\t      \t\tif(element.stderr == null)\n\t\t\t\t\t      \t\t\tfinalobj[\"stdout\"] = element.stdout\n\t\t\t\t\t      \t\telse\n\t\t\t\t\t      \t\t\tfinalobj[\"stdout\"] = element.stderr\n\t\t\t\t\t      \t}\n\t\t\t\t\t      \telse\n\t\t\t\t\t      \t{\n\t\t\t\t\t\t      \tif(element.compile_output == null)\n\t\t\t\t\t\t      \t\tfinalobj[\"stdout\"] = element.stdout\n\t\t\t\t\t\t      \telse\n\t\t\t\t\t\t      \t\tfinalobj[\"stdout\"] = element.compile_output\n\t\t\t\t\t      \t}\n\t\t\t\t\t      })\n\t\t\t\t\t      var finallist = [];\n\t\t\t\t\t      if(finalobj[\"stdout\"] !== null)\n\t\t\t\t\t      \tfinallist = finalobj[\"stdout\"].split('\\n');\n\t\t\t\t\t      else\n\t\t\t\t\t      {\n\t\t\t\t\t      \tfinalobj[\"stdout\"] = \"Compiled and run\";\n\t\t\t\t\t      \tfinallist = finalobj[\"stdout\"].split('\\n')\n\t\t\t\t\t      } \n\t\t\t\t\t      this.setState({\n\t\t\t\t\t      \toutput : finallist,\n\t\t\t\t\t      \tdisabled: false\n\t\t\t\t\t      })\n\t\t\t\t\t    })\n\t\t\t\t\t    .catch((error)=>{\n\t\t\t\t\t    \tvar finalobj = new String();\n\t\t\t\t\t    \tfinalobj[\"stdout\"] = \"Error!!\"\n\t\t\t\t\t    \tvar finallist = []\n\t\t\t\t\t    \tfinallist = finalobj[\"stdout\"].split('\\n');\n\t\t\t\t\t    \tthis.setState({\n\t\t\t\t\t    \t\toutput : finallist,\n\t\t\t\t\t    \t\tdisabled: false\n\t\t\t\t\t    \t})\n\t\t\t\t\t      console.log(error)\n\t\t\t\t\t    })\n\t\t\t\t    })\n\t\t\t\t    .catch((error)=>{\n\t\t\t\t    \tvar finalobj = new String();\n\t\t\t\t    \tfinalobj[\"stdout\"] = \"Error!!\"\n\t\t\t\t    \tvar finallist = []\n\t\t\t\t    \tfinallist = finalobj[\"stdout\"].split('\\n');\n\t\t\t\t    \tthis.setState({\n\t\t\t\t    \t\toutput : finallist,\n\t\t\t\t    \t\tdisabled: false\n\t\t\t\t    \t})\n\t\t\t\t      console.log(error)\n\t\t\t\t    })\n\t \t\t    })\n\t\t    \t.catch((error)=>{\n\t\t    \t\tvar finalobj = new String();\n\t\t\t    \tfinalobj[\"stdout\"] = \"Error!!\"\n\t\t\t    \tvar finallist = []\n\t\t\t    \tfinallist = finalobj[\"stdout\"].split('\\n');\n\t\t\t    \tthis.setState({\n\t\t\t    \t\toutput : finallist,\n\t\t\t    \t\tdisabled: false\n\t\t\t    \t})\n\t\t      \tconsole.log(error)\n\t\t    })\t\t\n\n\tthis.setState({\n\t  id: 71,\n      code: proc[\"code\"],\n      input: proc[\"input\"],\n      lang: proc[\"lang\"],\n      output: [],\n    })\n}\n\n  render() {\n    return (\n    \t<div>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row-mt-5\">\n\t\t\t\t\t<div className=\"col-sm-10\">\n\t\t\t\t\t\t<h1 className=\"text-center\">Online IDE</h1>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<form onSubmit={this.onSubmit}>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label>Select Language</label>\n\t\t\t\t\t<select\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tvalue={this.state.lang}\n\t\t\t\t\t\tonChange={this.onChangelang}>\n\t\t\t\t\t<option value=\"c++\">c++</option>\n\t\t\t\t\t<option value=\"python\">python</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label>Write Your Code </label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tvalue={this.state.code} \n\t\t\t\t\t\trows=\"10\" cols=\"50\" \n\t\t\t\t\t\tonChange={this.onChangecode}\n\t\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label>Enter Your Input </label>\n\t\t\t\t\t<textarea className=\"form-control\" \n\t\t\t\t\tvalue={this.state.input} \n\t\t\t\t\trows=\"10\" cols=\"50\"\n\t\t\t\t\tonChange={this.onChangeinput} \n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\t\n\t\t\t\t\t<input disabled ={this.state.disabled} type=\"submit\" className=\"btn btn-success\" value=\"Run Code\" />\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t<div>\n\t\t\t\t<button disabled={this.state.disabled} className=\"btn btn-primary\" onClick = {(e) => this.handleClick(e)}>Clear</button>\n\t\t\t</div>\n\t\t\t<div className=\"container\">\n\t            <div className=\"row-mt-5\">\n\t                <div className=\"col-sm-10\">\n\t                    <h1 className=\"text-center\">Output</h1>\n\t                </div>\n\t            </div>\n\t            <div>\n\t            {\n\t            \tthis.state.output.map((out,i) => {\n\t            \t\treturn (\n\t            \t\t\t<div key={i}>\n\t            \t\t\t\t<h4>{out}</h4>\n\t            \t\t\t</div>\n\t            \t\t)\n\t            \t})\n\t            }\n\t            </div>\n\t        </div>\n\t\t</div>\n    )\n  }\n}\n","import React from 'react'; \nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport Home from './components/home.component'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n          <Route path=\"/\" exact component={Home} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}